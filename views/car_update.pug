extends layout 
block scripts 
    script(src="/javascripts/layoutSearch.js" defer='true')
    script(src="/javascripts/layoutModes.js" defer='true')
    script(src="/javascripts/layoutMenuButton.js" defer='true')
    script(src="/javascripts/carUpdateSwitchHandler.js" defer='true')
block content
    h1 #{title}
    p #{instructions}
    form(method='post' id='formUpdateCar') 
        fieldset 
            legend Vehicle Specifics:
            .form-content-text-new
                label(for='updatePrice') Price (USD) (required): 
                input(type='number' id='updatePrice' value=price class='car' name='price')
                label(for='updateMileage' class='mileage' class='imperial') Mileage (required): 
                input(type='number' id='updateMileage' class='mileage' class='imperial' value=mileage class='car' name='mileage')
                p(class='carUpdateSwitch' class='mileage' class='imperial') Switch to metric
                label(for='updateKilometers' class='mileage' class='metric' class='invisible') Kilometers (required): 
                input(type='number' id='updateKilometers' class='mileage' class='metric' class='invisible' class='car') 
                p(class='carUpdateSwitch' id='toImperial' class='mileage' class='metric' class='invisible') Switch to imperial
                label(for='updateStatus') Status: 
                select(id='updateStatus' class='car' name='status')
                    option(value='Sold' selected=(status=='Sold' ? 'selected' : false)) Sold 
                    option(value='Available' selected=(status=='Available' ? 'selected' : false)) Available
                label(for='updateColor') Color: 
                select(id='updateColor' class='car' name='color')
                    option(value='Black', selected=(color == "Black" ? 'selected' : false)) Black
                    option(value='Blue', selected=(color == "Blue" ? 'selected' : false)) Blue
                    option(value='Brown', selected=(color == "Brown" ? 'selected' : false)) Brown
                    option(value='Grey', selected=(color == "Grey" ? 'selected' : false)) Grey
                    option(value='Green', selected=(color == "Green" ? 'selected' : false)) Green
                    option(value='Red', selected=(color == "Red" ? 'selected' : false)) Red
                    option(value='Silver', selected=(color == "Silver" ? 'selected' : false)) Silver
                    option(value='White', selected=(color == "White" ? 'selected' : false)) White
                    option(value='Yellow', selected=(color == "Yellow" ? 'selected' : false)) Yellow
                    option(value='Other', selected=(color == "Other" ? 'selected' : false)) Other
                label(for='updateCountry') Country: 
                select(id='updateCountry', name='carCountry' class='car')
                    for country in countries 
                        option(value=`${country}` selected=(carCountry==country ? 'selected' : false)) #{country}
                label(for='updateDescription') Description:
                input(id='updateDescription' type='text' value=description class='car' name='description')
        fieldset 
            legend Contact Information:
            .form-content-text-new
                label(for='updateEmail') Email: 
                input(id='updateEmail' type='text' value=email class='car' name='email')
                label(for='updatePhone') Phone: 
                input(id='updatePhone' type='string' value=phone class='car' name='phone')
        fieldset 
            legend Technical Specs:
            .form-content-text-new
                label(for='updateBody') Body:
                input(id='updateBody' type='text' value=body class='version' name='body')
                label(for='updateFuel') Fuel type: 
                input(id='updateFuel' type='text' value=fuel class='version' name='fuelSpecifics')
                label(for='updateEngine') Engine type: 
                input(id='updateEngine' type='text' value=engine class='version' name='engineType')
                label(for='updatePosition') Engine position: 
                select(id='updatePosition' class='version' name='position')         
                    option(value='Front' selected=(/Front/i.test(enginePosition) ? 'selected' : false)) Front
                    option(value='Center' selected=(/Center/i.test(enginePosition) ? 'selected' : false)) Center
                    option(value='Rear' selected=(/Rear|Back/i.test(enginePosition) ? 'selected' : false)) Rear
                label(for='updateDisplacement') Displacement (CC):
                input(id='updateDisplacement' type='number' value=displacement class='version' name='displacement')
                label(for='updateCylinders') Cylinders: 
                input(id='updateCylinders' type='number' value=cylinders class='version' name='cylinders')
                label(for='updateTorque') Torque (Nm):
                input(id='updateTorque' type='number' value=torque class='version' name='torque')
                label(for='updatePower') Power (hp):
                input(id='updatePower' type='number' value=power class='version' name='power')
                label(for='updateCompression') Compression: 
                input(id='updateCompression' type='text' value=compression class='version' name='compression')
                label(for='updateDrive') Drive: 
                select(id='updateDrive' type='string' class='version' name='drive')
                    option(value='4WD' selected=(/4|four/i.test(drive)?'selected':false)) 4WD
                    option(value='AWD' selected=(/all|awd/i.test(drive)?'selected':false)) AWD
                    option(value='FWD' selected=(/front|fwd/i.test(drive)?'selected':false)) FWD
                    option(value='RWD' selected=(/rear|rwd/i.test(drive)?'selected':false)) RWD 
                label(for='updateTransmission') Transmission: 
                input(id='updateTransmission' type='text' value=transmission class='version' name='transmission')
                label(for='updateWeight' class='weight' class='imperial') Weight (lbs):
                input(id='updateWeight' type='number' class='weight' class='imperial' value=weight class='version' name='weight')
                p(class='carUpdateSwitch' class='weight' class='imperial') Switch to metric
                label(for='updateWeight' class='weight' class='metric' class='invisible') Weight (kg): 
                input(id='updateWeight' type='number' class='weight' class='metric' class='invisible' class='version')
                p(class='carUpdateSwitch' id='toImperial' class='weight' class='metric' class='invisible') Switch to imperial
                label(for='updateEfficiencyHighway' class='efficiencyHighway' class='imperial') Highway efficiency (mpg): 
                input(id='updateEfficiencyHighway' type='number' class='efficiencyHighway' class='imperial' value=highway class='version' name='hEff')
                p(class='carUpdateSwitch' class='efficiencyHighway' class='imperial') Switch to metric
                label(for='updateEfficiencyHighway' class='efficiencyHighway' class='metric' class='invisible') Highway efficiency (kpg): 
                input(id='updateEfficiencyHighway' type='text' class='efficiencyHighway' class='metric' class='invisible' class='version')
                p(class='carUpdateSwitch' id='toImperial' class='efficiencyHighway' class='metric' class='invisible') Switch to imperial
                label(for='updateEfficiencyMixed' class='efficiencyMixed' class='imperial') Mixed efficiency (mpg): 
                input(id='updateEfficiencyMixed' type='number' class='efficiencyMixed' class='imperial' value=mixed class='version' name='mEff')
                p(class='carUpdateSwitch' class='efficiencyMixed' class='imperial') Switch to metric
                label(for='updateEfficiencyMixed' class='efficiencyMixed' class='metric' class='invisible') Mixed efficiency (kpg): 
                input(id='updateEfficiencyMixed' type='text' class='efficiencyMixed' class='metric' class='invisible' class='version')
                p(class='carUpdateSwitch' id='toImperial' class='efficiencyMixed' class='metric' class='invisible') Switch to imperial
                label(for='updateEfficiencyCity' class='efficiencyCity' class='imperial') City efficiency (mpg): 
                input(id='updateEfficiencyCity' type='number' class='efficiencyCity' class='imperial' value=city class='version' name='cEff')
                p(class='carUpdateSwitch' class='efficiencyCity' class='imperial') Switch to metric
                label(for='updateEfficiencyCity' class='efficiencyCity' class='metric' class='invisible') City efficiency (kpg): 
                input(id='updateEfficiencyCity' type='text' class='efficiencyCity' class='metric' class='invisible' class='version')
                p(class='carUpdateSwitch' id='toImperial' class='efficiencyCity' class='metric' class='invisible') Switch to imperial
                label(for='updateMaxSpeed' class='speed' class='imperial') Max speed (mph):
                input(id='updateMaxSpeed' type='number' class='speed' class='imperial' class='version')
                p(class='carUpdateSwitch' class='speed' class='imperial') Switch to metric
                label(for='updateMaxSpeed' class='speed' class='metric' class='invisible') Max speed (km/h):
                input(id='updateMaxSpeed' type='number' class='speed' class='metric' class='invisible' class='version' name='speed' value=speed)
                p(class='carUpdateSwitch' id='toImperial' class='speed' class='metric' class='invisible') Switch to imperial
                label(for='updateAcceleration') Acceleration (seconds):
                input(id='updateAcceleration' type='number' value=acceleration class='version' name='acceleration')
                p Time it takes to reach 60 mph (100 km/h)
                label(for='updateLength' class='length' class='imperial') Length (inches):
                input(id='updateLength' type='number' class='length' class='imperial' value=length class='version')
                p(class='carUpdateSwitch' class='length' class='imperial') Switch to metric
                label(for='updateLength' class='length' class='metric' class='invisible') Length (m):
                input(id='updateLength' type='text' class='length' class='metric' class='invisible' class='version' name='length')
                p(class='carUpdateSwitch' id='toImperial' class='length' class='metric' class='invisible') Switch to imperial
                label(for='updateWidth' class='width' class='imperial') Width (inches):
                input(id='updateWidth' type='number' class='width' class='imperial' value=width class='version')
                p(class='carUpdateSwitch' class='width' class='imperial') Switch to metric
                label(for='updateWidth' class='width' class='metric' class='invisible') Width (m):
                input(id='updateWidth' type='text' class='width' class='metric' class='invisible' class='version' name='width')
                p(class='carUpdateSwitch' id='toImperial' class='width' class='metric' class='invisible') Switch to imperial
                label(for='updateHeight' class='height' class='imperial') Height (inches):
                input(id='updateHeight' type='number' class='height' class='imperial' value=height class='version')
                p(class='carUpdateSwitch' class='height' class='imperial') Switch to metric
                label(for='updateHeight' class='height' class='metric' class='invisible') Height (m):
                input(id='updateHeight' type='text' class='height' class='metric' class='invisible' class='version' name='height')
                p(class='carUpdateSwitch' id='toImperial' class='height' class='metric' class='invisible') Switch to imperial
            .formOptions 
                .formNoChanges
                    p(class='formOption' data-id=id) Info looks good
                .formChangesConfirmation
                    p(class='formOption') Restore initial info
                    p(class='formOption') Save changes
                .formChangesOptions(class='invisible') 
                    p Apply Technical Specs changes...
                    div 
                        p(class='formOption' data-car=id data-version=versionId) Only to this #{model}
                        p(class='formOption' data-car=id data-version=versionId) To all #{model}s
                    

